// TODO //

    poker(query, text) {
    trivia() {
    clue() {
    skip() {
    triviastats() {
    slots() {
    megaslots() {
    slotstats() {
    ping(query) {
    define(words, text) {
    example(words, text) {
    imgur(query, text) {
    pornhub(query, text) {
    drug(query, text) {
    youtube(query, text) {
    google(query, text) {
    weather(query, text) {
    reddit(query, text) {
~reddit #
    "log": function(query, text) { IRC.log
    log.regex
    speak(query, text) { // use log
    remind(query, text) {
    memo(query, text) {
    seen(who, text) {
    "commands": function (query, text) {
    "eval": function(query, text) {

MVP: auth, log, help, slots, poker
help.commands help.colors help.urls help.eval help.logs help.memo help.games // ~eval has moved to ~>, help.eval for more info
memo/remind check IRC.command | 2d3h time

command.new
command.edit
command.new.text
command.search
command.random
command.source
// check parent locked
// ~poker (do all in the api, one round a time, scoped stats)
store.getDefault()
// hyperslots {g,r} watermelon à¸¿ hyperslots bigint
cancelable getRequest (defend infinite loop

// WEB API
complete auth
test command
test parse command
// dispatch message on print
// join new channels/servers
// track nick list

// UI
react router / ace editor
// subcommands / tree
only web ui can kick/part/join
// db web backup zip

// EDITOR
edited
testing

patch the rizon log

// http://www.df7cb.de/irc/pisg/pisg-month.html
https://www.npmjs.com/package/date.js
https://www.npmjs.com/package/timestring

// alg.js
roll 7 high scores (hiscore/loscore baleet)
require() support | npmi
can still do async chaining by changing what print and getJSON etc do, getting commands to run and executing them in promises
// await getJSON.test.test example
// document web API / command context
// event backend
// about -> github iframe
// old prs
// ~speak typeerror bofh
bully
wca
mdn
bridges?
