{
    "locked": false,
    "starred": false,
    "name": "tmpthing",
    "command": "const loadUser = (user) => {\n    return IRC.require('module.loadObject')(user, []);\n}\nfunction thingDB() {\n    let [type, param1, param2] = input.split(/\\s+/);\n    \n    let add = ([list, setList]) => {\n        if (!param1) {\n            print(`${type} needs an URL! ${helptxt}`);\n            return;\n        }\n        list.push(param1);\n        setList(list);\n        print(`added! new list: `+ pretty(list));\n    };\n    let del = ([list, setList]) => {\n        if (param1 == \"*\" || param1 == \"all\") {\n            setList([]);\n            print(\"deleted all!\");\n            return;\n        }\n        if (!param1) {\n            print(`${type} needs an index! ${helptxt}`);\n            return;\n        }\n        if (!list[+param1]) {\n            throw 'no such index';\n        } \n        list.splice(+param1, 1)\n        setList(list);\n        print(`deleted! new list: `+pretty(list));\n    };\n    let rep = ([list, setList]) => {\n        if (!param1) {\n            print(`${type} needs an index and an URL! ${helptxt}`);\n            return;\n        }\n        if (!param2 && param1.match(/^http/)) { // if no index, just set first\n            param2 = param1;\n            param1 = 0;\n        }\n        if (!list[+param1]) {\n            throw 'no such index';\n        } \n        list[param1] = param2;\n        setList(list);\n        print(`replaced ${+param1}: `+pretty(list));\n    };\n    let pretty = list => (list.map((d, i) => `${IRC.colors.nick(''+i, false)}: ${d}`).join` `);\n    let helptxt = `help: [-add URL | -del INDEX | -replace INDEX URL | NICK] See the src at http://nibblr.pw/`\n    let help = () => print(helptxt);\n\n    const user = IRC.message.from;\n    const action = {\n        '-a': add,\n        '-add': add,\n        '--add': add,\n        '-d': del,\n        '-del': del,\n        '--del': del,\n        '-s': rep,\n        '-set': rep,\n        '--set': rep,\n        '-r': rep,\n        '-replace': rep,\n        '--replace': rep,\n        '?': help,\n        '-h': help,\n        'help': help,\n        '-help': help,\n        '--help': help,\n    }[type];\n\n    if (action) {\n        action(loadUser(IRC.message.from));\n        //print('ok')\n    } else if (type && type.match(/^http/)) { // if the user did ~thing URL, he meant to --add\n        param1 = type;\n        add(loadUser(IRC.message.from));\n    } else {\n        const nick = type || IRC.message.from\n        const [list] = loadUser(nick);\n        if (list.length) {\n            print(pretty(list));\n        } else if (type && type.match(/^-/)) {\n            print(`bad command ${type}. ${helptxt}`);\n        } else {\n            print(`nothing added for ${nick}. ${helptxt}`);\n        }\n    }\n}\n\nif (!module.required) {\n    thingDB();\n}\n\nmodule.exports = thingDB;"
}