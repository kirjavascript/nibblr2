{
    "name": "golf.test",
    "command": "// print.raw(JSON.stringify(store.all()))\n\nIRC.sudo();\n//const [scores, setScores] = IRC.require('module.loadObject')(`scores-miniJSON`)\n//delete scores.aditsu;\n//setScores(scores);\n\nif (input == 'delete') IRC.sudo();\n\nnoEval = x => ['miniJSON'].includes(x);\n\ntasks = IRC.require('golf.tasks');\nObject.keys(tasks).sort((a,b) => noEval(a) - noEval(b)).filter(d => d != 'wordpath').forEach(taskKey => {\n    const [scores, setScores] = IRC.require('module.loadObject')(`scores-${taskKey}`);\n    Object.keys(scores).forEach(key => {\n        const score = scores[key];\n        try {\n            tasks[taskKey].test(score.solution);\n        } catch (e) {\n            print.error(`${key} has an invalid solution for ${taskKey}: ${e}`);\n            delete scores[key];\n        }\n    });\n    if (input == 'delete') {\n            setScores(scores);\n    }\n})\nprint('done')",
    "locked": false,
    "starred": false
}