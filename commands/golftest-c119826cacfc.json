{
    "name": "golf.test",
    "command": "const { getScores, setScores } = IRC.require('golf.store');\nIRC.sudo();\n\nfunction nuke(task, user) {\n    const scores = getScores(task);\n    if (scores[user]) {\n        print(`deleting ${task} for ${user}`)\n        delete scores[user];\n    }\n    setScores(task, scores);\n}\n\nfunction test(shouldDelete, showMessage) {\n    const ignored = ['wordpath', 'shortestPath', 'polyfill'];\n    const { taskList } = IRC.require('golf.tasks');\n    Object.keys(taskList).filter(d => !ignored.includes(d)).forEach(taskKey => {\n        const scores = getScores(taskKey);\n        Object.keys(scores).forEach(key => {\n            const score = scores[key];\n            try {\n                tasks[taskKey].test(score.solution);\n            } catch (e) {\n                if (!showMessage) {\n                    e.message = '[REDACTED]'\n                }\n                print.error(`${key} has an invalid solution for ${taskKey}: ${e.message}`);\n                delete scores[key];\n            }\n        });\n        if (shouldDelete) {\n            setScores(taskKey, scores);\n        }\n    })\n    print('done');\n}\n\neval(input ? input : 'test()');",
    "locked": false,
    "starred": false
}