{
    "name": "whendoesworkend",
    "command": "//const t = (17.5-(new Date().getHours()+(new Date().getMinutes()/60)));\n//print(`in ${0|t}:${(0|(t-(0|t))*60).toString().padStart(2, '0')} units of thyme`);\nlet user = IRC.message.from;\nlet utc;\nlet input_args = input.split(\" \");\n\nfunction ErrorHandler() {\n  if (input_args[0] == \"set\" && (input_args.length < 2 || input_args.length > 3 ||\n        input_args[1].split(':').length != 2 || isNaN(parseInt(input_args[1].split(':')[0])) ||\n        isNaN(parseInt(input_args[1].split(':')[1])))) {\n    print(`Error: wrong input arguments. Use {p}~whendoesworkend set hh:mm or {p}~whendoesworkend set hh:mm timezone`)\n    return 1;\n  } else if (input_args[0] == \"reset\" && input_args.length > 1) {\n    print(`Error: too many input arguments. Use {p}~whendoesworkend reset`)\n    return 1;\n  } else if (input_args[0] != 'set' && input_args[0] != 'reset') {\n    print(`Error: false input argument. Use \"set\", \"reset\" or none`)\n    return 1;\n  }\n}\n\nfunction main() {\n  if (input_args.length > 0 && input_args[0] != \"\") {\n    if (ErrorHandler()) {\n      return false;\n    }\n    \n    if (input_args[0] == \"set\") {\n      let user = IRC.message.from;\n      var date = new Date();\n      let time = input_args[1].split(':')\n  \n      if (input_args.length == 3) {\n        utc = parseInt(input_args[2]);\n      } else {\n        utc = 0;\n      }\n  \n      date.setHours(parseInt(time[0]) - utc);\n      date.setMinutes(parseInt(time[1]));\n  \n      let hours = date.getHours();\n  \n      let minutes = date.getMinutes();\n  \n      //store.set(user, date.getHours()*60+date.getMinutes());\n  \n      store.set(user, date);\n  \n      print(`End of work day set for ${user}: ${hours+utc}:${time[1]} UTC${utc}`)\n  \n    } else if (input_args[0] == \"reset\") {\n      store.set(user, \"\");\n      print(`End of work day reset!`)\n    }\n  \n  } else {\n    let work_end = new Date(store.get(user));\n  \n    let minutes = work_end.getMinutes();\n    let hours = work_end.getHours();\n  \n    let date = new Date(Date.now());\n  \n    let curr_hours = date.getHours();\n    let curr_minutes = date.getMinutes();\n  \n    let hours_until = hours-curr_hours;\n    let minutes_until = minutes - curr_minutes;\n  \n    if (curr_minutes > minutes) {\n      minutes_until = 60 + minutes_until;\n      hours_until -= 1;\n    }\n  \n    if (minutes_until < 10) {\n      minutes_until = \"0\"+minutes_until.toString();\n    }\n  \n    if (typeof parseInt(store.get(user)) == 'number') {\n      if (date.getHours()*60 + date.getMinutes() >= work_end.getHours()*60 + work_end.getMinutes()) {\n        print(`Work has already ended`);\n      } else {\n        print(`Work ends in ${hours_until}:${minutes_until} units of thyme`)\n      }\n    } else {\n      print(`You first have to set a value using {p}~whendoesworkend set hh:mm`)\n    }\n  }\n}\n\nmain();",
    "locked": true,
    "starred": false
}