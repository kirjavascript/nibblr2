{
    "name": "golf.submit",
    "command": "IRC.auth();\n\nconst [taskName, ...solutionList] = input.split` `;\nconst solution = solutionList.join` `;\n\nconst tasks = IRC.require('golf.tasks');\n\nif (!tasks[taskName]) {\n    throw new Error('Please choose a valid task');\n}\n\nconst [scores, setScores] = IRC.require('module.loadObject')(`scores-${taskName}`);\n\ntasks[taskName].test(solution);\n\nconst { from } = IRC.message;\n\nconst bytes = byteCount(solution);\n\nif (scores[from] == undefined) {\n    scores[from] = {\n        bytes,\n        solution,\n        timestamp: (new Date).toISOString(),\n    };\n    print(`{g}correct!{/} your score is {dc}${bytes}{/}`);\n    notifyChannel({ from, bytes, taskName, scores });\n} else {\n    if (scores[from].bytes < bytes) {\n        print('{y}correct{/}, {dc}' +bytes + '{/}. but you have a better score of {dc}'+ scores[from].bytes + '{/}')\n    } else {\n        const oldScore = scores[from].bytes;\n\n        if (oldScore === bytes) {\n            print('{y}correct{/}, but you already have a score of {dc}' +bytes + '{/} {gr}(your solution has been updated){/}')\n            scores[from].solution = solution;\n        } else {\n            const saved = oldScore - bytes;\n            print(`{g}correct!{/} you saved {dc}${saved}{/} byte${saved>1?'s':''} for a new score of {dc}${bytes}{/}`);\n            scores[from] = {\n                bytes,\n                solution,\n                timestamp: (new Date).toISOString(),\n            };\n            notifyChannel({ from, bytes, taskName, scores, oldScore });\n        }\n\n    }\n}\n\nsetScores(scores);\n\nfunction notifyChannel({ bytes, taskName, from, scores, oldScore }) {\n    const place = _.sortBy(Object.entries(scores)\n        .map(([key, value]) => ({ from: key, ...value })), (d) => +d.bytes)\n        .reduce((acc, cur) => {\n        if (!~acc.findIndex((d) => d.bytes === cur.bytes)) {\n            acc.push(cur);\n        }\n        return acc;\n    }, []).map(d=>d.bytes).indexOf(bytes) + 1;\n    \n    const ordinal = dateFns.format('1970-01-'+String(place).padStart(20),'Do');\n    const colours = ['{y}','{gr}','{o}'];\n    const placeStr = place < 4 ? `  (${colours[place-1]||'{bo}'}${ordinal} place${[...'ðŸ¥‡ðŸ¥ˆðŸ¥‰'][place-1]}{/})` : '';\n\n    if (IRC.message.to !== '##jsgolf') {\n        if (oldScore) {\n            const saved = oldScore - bytes;\n            print(`${IRC.colors.nick(from, true)} saved {dc}${saved}{/} byte${saved>1?'s':''} for a new score of {dc}${bytes}{/} on ${IRC.colors.nick(taskName)} ${placeStr}`, { target: '##jsgolf' });\n\n        } else {\n            print(`${IRC.colors.nick(from, true)} got a score of {dc}${bytes}{/} on ${IRC.colors.nick(taskName)} ${placeStr}`, { target: '##jsgolf' });\n        }\n    }\n}\n\nfunction byteCount(s) {\n    return encodeURI(s).split(/%..|./).length - 1;\n}",
    "locked": false,
    "starred": false
}