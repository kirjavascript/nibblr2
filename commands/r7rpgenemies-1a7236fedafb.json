{
    "locked": false,
    "starred": false,
    "name": "r7rpg.enemies",
    "command": "const { from } = IRC.message\n\nlet player = store.load(from)\n\nif (! player.status) {\n  throw new Error('Use ~r7rpg.register to play') \n}\n\nconst lvl1 = [\n {\n    name: \"Monkey\",\n    base_health: 100,\n    base_strength: 10,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 0\n  },\n  {\n    name: \"Monqui\",\n    base_health: 130,\n    base_strength: 100,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 7\n  },\n  {\n    name: \"Skeleton\",\n    base_health: 50,\n    base_strength: 100,\n    base_defense: 0,\n    base_agility: 10,\n    base_intelligence: 0,\n    base_money: 10\n  },\n  {\n    name: \"Pirate\",\n    base_health: 100,\n    base_strength: 50,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 100\n  },\n  {\n    name: \"Shreddy's mom\",\n    base_health: 10,\n    base_strength: 1,\n    base_defense: 0,\n    base_agility: 30,\n    base_intelligence: 0,\n    base_money: 0\n  },\n  {\n    name: \"Tiger\",\n    base_health: 50,\n    base_strength: 30,\n    base_defense: 0,\n    base_agility: 100,\n    base_intelligence: 0,\n    base_money: 0\n  },\n]\n\nconst lvl2 = [\n  {\n    name: \"Angry Falcon\",\n    base_health: 100,\n    base_strength: 70,\n    base_defense: 20,\n    base_agility: 100,\n    base_intelligence: 40,\n    base_money: 50\n  },\n  {\n    name: \"Fatty\",\n    base_health: 200,\n    base_strength: 30,\n    base_defense: 100,\n    base_agility: 0,\n    base_intelligence: 10,\n    base_money: 50\n  },\n  {\n    name: \"Jew\",\n    base_health: 70,\n    base_strength: 200,\n    base_defense: 20,\n    base_agility: 100,\n    base_intelligence: 0,\n    base_money: 700\n  },\n  {\n    name: \"Giant Rat\",\n    base_health: 80,\n    base_strength: 50,\n    base_defense: 10,\n    base_agility: 10,\n    base_intelligence: 1,\n    base_money: 50\n  },\n  {\n    name: \"Rubber Gimp\",\n    base_health: 100,\n    base_strength: 100,\n    base_defense: 30,\n    base_agility: 10,\n    base_intelligence: 10,\n    base_money: 50\n  },\n  {\n    name: \"Mr Onqui\",\n    base_health: 100,\n    base_strength: 0,\n    base_defense: 40,\n    base_agility: 1000,\n    base_intelligence: 1000,\n    base_money: 777\n  },\n]\n\nconst lvl3 = [\n  {\n    name: \"Crack Spider\",\n    base_health: 100,\n    base_strength: 200,\n    base_defense: 10,\n    base_agility: 40,\n    base_intelligence: 0,\n    base_money: 100\n  },\n  {\n    name: \"Ninja\",\n    base_health: 100,\n    base_strength: 300,\n    base_defense: 100,\n    base_agility: 100,\n    base_intelligence: 100,\n    base_money: 100\n  },\n  {\n    name: \"Giant Octopus\",\n    base_health: 350,\n    base_strength: 100,\n    base_defense: 200,\n    base_agility: 20,\n    base_intelligence: 10000,\n    base_money: 1000\n  },\n  {\n    name: \"Birb Monster\",\n    base_health: 320,\n    base_strength: 150,\n    base_defense: 40,\n    base_agility: 100,\n    base_intelligence: 10,\n    base_money: 250\n  },\n]\n\nlet save = () => {\n  store.save(from, player)\n}\n\nlet newEnemy = (name = null, level = null, multiplier = 1) => {\n  let base, pool\n  if (name) {\n    if (lvl1.find(element => element.name == name)) {\n      base = lvl1.find(element => element.name == name)\n    } else if (lvl2.find(element => element.name == name)) {\n      base = lvl2.find(element => element.name == name)\n    } else if (lvl3.find(element => element.name == name)) {\n      base = lvl3.find(element => element.name == name)\n    } else {\n      base = {\n        name: `{b}${name}`,\n        base_health: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_strength: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_defense: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_agility: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_intelligence: (Math.floor(Math.random() * 100) + 1) * multiplier,\n        base_money: (Math.floor(Math.random() * 100) + 1) * multiplier\n      }\n    }\n    if (!level) {\n      level = Math.floor(Math.log(player.stats.level) * (Math.random() * 5))\n    }\n  } else {\n    let chance = Math.floor(Math.random() * 100)\n    level = Math.floor(Math.log(player.stats.level) * (Math.random() * 5))\n    if (player.stats.level < 5) {\n      if (chance < 15) {\n        pool = lvl2\n      } else {\n        pool = lvl1\n      }\n      level = player.stats.level\n    } else if (player.stats.level < 10) {\n      if (chance < 60) {\n        pool = lvl1\n      } else if (chance < 85) {\n        pool = lvl2\n      } else {\n        pool = lvl3\n      }\n    } else {\n      if (chance < 25) {\n        pool = lvl1\n      } else if (chance < 65) {\n        pool = lvl2\n      } else {\n        pool = lvl3\n      }\n    }\n    base = pool[Math.floor(Math.random() * pool.length)]\n  }\n  //base = enemies[Math.floor(Math.random() * enemies.length)]\n  const health = Math.floor(base.base_health + (level * 10) * multiplier)\n  const strength = Math.floor(base.base_strength + (level * 10) * multiplier)\n  const defense = Math.floor(base.base_defense + (level * 10) * multiplier)\n  const agility = Math.floor(base.base_agility + (level * 10) * multiplier)\n  const intelligence = Math.floor(base.base_intelligence + (level * 10) * multiplier)\n  const money = Math.floor((base.base_money + Math.floor(Math.random() * 50)) * multiplier)\n  \n  player.enemy = {\n    name: base.name,\n    level: level,\n    health: health,\n    xp: health,\n    strength: strength,\n    defense: defense,\n    agility: agility,\n    intelligence: intelligence,\n    money: money\n  }\n  \n  player.status.type = 'combat'\n  \n  print(`{dc}${from}{/}: Enemy {g}${player.enemy.name}{/} has appeared ({p}lvl: ${player.enemy.level}{/} | {r}hp: ${player.enemy.health}{/})`)\n  \n  store.save(from, player)\n}\n\nconst getInfo = () => {\n  if (player.enemy.name) {\n    print(`{dc}${from}{/} is battling a {r}${player.enemy.name}{/} ({w}lvl ${player.enemy.level}{/} | {r}${player.enemy.health}hp{/} | {b}${player.enemy.strength} strength{/} | {g}${player.enemy.defense} defense{/} | {o}${player.enemy.agility} agility{/} | {p}${player.enemy.intelligence} intelligence{/} | {y}$${player.enemy.money}{/})`)\n  } else {\n    throw new Error(`{dc}${from}{/} is not battling an enemy`)\n  }\n}\n\nconst clonePlayer = (name) => {\n  clone = store.load(name)\n  if (!clone.status || !clone.status.type) {\n    throw new Error(`{dc}${from}{/}: Couldn't find ${name}`)\n  }\n  if (clone.status.type === 'combat') {\n    throw new Error(`{dc}${from}{/}: ${name} is in combat`)\n  }\n  let xp\n  if (player.stats.level <= clone.stats.level) {\n    xp = clone.stats.level * 60\n  } else {\n    xp = clone.stats.level * 30\n  }\n  player.enemy = {\n    name: name,\n    level: clone.stats.level,\n    health: clone.stats.max_health,\n    xp: xp,\n    strength: clone.stats.strength,\n    defense: clone.stats.defense,\n    agility: clone.stats.agility,\n    intelligence: clone.stats.intelligence,\n    money: 0\n  }\n  player.status.type = 'combat'\n  \n  print(`{dc}${from}{/}: Player {g}${player.enemy.name}{/} has appeared ({p}lvl: ${player.enemy.level}{/} | {r}hp: ${player.enemy.health}{/})`)\n  \n  store.save(from, player)\n}\n\nmodule.exports = {\n  newEnemy,\n  getInfo,\n  clonePlayer\n}"
}