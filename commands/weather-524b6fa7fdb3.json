{
    "name": "weather",
    "command": "if (!input.trim()) {\n    print(`usage: {p}${IRC.trigger}weather{/} [location] {dgr}(service provided by metaweather.com){/}`)\n}\nelse {\n    const { format } = dateFns;\n    const emoji = {\n    sn: '🌨', \n        sl: '🌨', \n        h : '❄️',\n    t : '🌩',\n        hr: '⛈',\n    lr: '🌧', \n        s : '🌦',\n        hc: '☁️', \n    lc: '⛅', \n    c : '☀️',\n};\n\n\n    getJSON(`https://www.metaweather.com/api/location/search/?query=${encodeURIComponent(input)}`)\n        .then(obj => {\n            if (!obj.length) {\n                throw new Error('no data');\n            } else {\n                const { title, woeid } = obj[0];\n                getJSON(`https://www.metaweather.com/api/location/${woeid}/`)\n                    .then(obj => {\n                        const sunrise = format(obj.sun_rise, 'HH:mm');\n                        const sunset = format(obj.sun_set, 'HH:mm');\n                        print(\n                            `Weather report for {g}${obj.title}, ${obj.parent.title}{/}`\n                        );\n                        obj.consolidated_weather.slice(0, IRC.command.params[0] || 3)\n                        .forEach(row => {\n                            print([\n                                `{dc}${row.applicable_date}{/} `,\n                                `{c}${row.weather_state_name.padEnd(13, ' ')}{/}`,\n                                `${emoji[row.weather_state_abbr]}  `,\n                                `low: {y}${String((0|row.min_temp)).padStart(2, 0)}{/}{bo}°C{/} `,\n                                `high: {y}${String((0|row.max_temp)).padStart(2, 0)}{/}{bo}°C{/} `,\n                                `avg: {y}${String((0|row.the_temp)).padStart(2, 0)}{/}{bo}°C{/} `,\n                                `humidity: {y}${row.humidity|0}%{/} `,\n                                `wind: {y}${row.wind_speed|0}mph ${row.wind_direction_compass} (${row.wind_direction|0}°){/} `,\n                                //`air pressure: {y}${row.air_pressure|0} mbar{/} `,\n                                //`visibility: {y}${row.visibility|0} miles{/} `,\n                                //`predictability: {y}${row.predictability|0}%{/} `,\n                            ].join``); \n                        });\n                        print(`Timezone - {dg}${obj.timezone_name}{/} - {dg}${obj.timezone}{/} Sunrise: {dc}${sunrise}{/} Sunset: {dc}${sunset}{/}`);\n                    })\n                    .catch(print.error);\n            }\n        })\n        .catch(print.error)\n}\n",
    "locked": true,
    "starred": true
}