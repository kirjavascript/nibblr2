{
    "locked": false,
    "starred": false,
    "name": "morse",
    "command": "const lookup = { '0': '-----', '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....', '6': '-....', '7': '--...', '8': '---..', '9': '----.', 'a': '.-', 'b': '-...', 'c': '-.-.', 'd': '-..', 'e': '.', 'f': '..-.', 'g': '--.', 'h': '....', 'i': '..', 'j': '.---', 'k': '-.-', 'l': '.-..', 'm': '--', 'n': '-.', 'o': '---', 'p': '.--.', 'q': '--.-', 'r': '.-.', 's': '...', 't': '-', 'u': '..-', 'v': '...-', 'w': '.--', 'x': '-..-', 'y': '-.--', 'z': '--..', ' ': ' ' };\n\nconst morseRe = /^[\\-\\.\\s]*$/\n\nlet keys = Object.keys( lookup)\nkeys.forEach( key => lookup[lookup[key]] = key)\n\nif( morseRe.test( input)) {\n    print( input.split(/\\s/).map( x => x===''?' ':lookup[x]).join(''))\n} else {\n    print( [...input].map( x => lookup[x]).join(' '))\n}"
}