{
    "locked": true,
    "starred": false,
    "name": "bfgen",
    "command": "// stolen from https://copy.sh/brainfuck/text.html\n\nfunction gcd(c, a) {\n    return 0 === a ? c : gcd(a, c % a);\n}\nfunction inverse_mod(c, a) {\n    for (var f = 1, d = 0, b; a; )\n        (b = f),\n            (f = d),\n            (d = b - d * ((c / a) | 0)),\n            (b = c),\n            (c = a),\n            (a = b % a);\n    return f;\n}\nfunction shortest_str(c) {\n    for (var a = 0, f = 1; f < c.length; f++)\n        c[f].length < c[a].length && (a = f);\n    return a;\n}\nfor (\n    var map = [],\n        plus_map = [''],\n        minus_map = [''],\n        iter = !0,\n        repeat = 2,\n        start,\n        i = 1;\n    256 > i;\n    i++\n)\n    (plus_map[i] = plus_map[i - 1] + '+'),\n        (minus_map[i] = minus_map[i - 1] + '-');\nfor (var x = 0; 256 > x; x++) {\n    map[x] = [];\n    for (var y = 0; 256 > y; y++) {\n        var delta = y - x;\n        128 < delta && (delta -= 256);\n        -128 > delta && (delta += 256);\n        map[x][y] = 0 <= delta ? plus_map[delta] : minus_map[-delta];\n    }\n}\nfunction next() {\n    iter = !1;\n    for (var c = 0; 256 > c; c++)\n        for (var a = 1; 40 > a; a++)\n            for (var f = inverse_mod(a, 256) & 255, d = 1; 40 > d; d++)\n                if (1 == gcd(a, d)) {\n                    if (a & 1) {\n                        var b = 0;\n                        var e = (c * f) & 255;\n                    } else\n                        for (b = c, e = 0; 256 > e && b; e++) b = (b - a) & 255;\n                    0 == b &&\n                        ((b = (d * e) & 255),\n                        a + d + 5 < map[c][b].length &&\n                            (map[c][b] =\n                                '[' +\n                                minus_map[a] +\n                                '>' +\n                                plus_map[d] +\n                                '<]>'));\n                    if (a & 1) (b = 0), (e = (-c * f) & 255);\n                    else\n                        for (b = c, e = 0; 256 > e && b; e++) b = (b + a) & 255;\n                    0 == b &&\n                        ((b = (-d * e) & 255),\n                        a + d + 5 < map[c][b].length &&\n                            (map[c][b] =\n                                '[' +\n                                plus_map[a] +\n                                '>' +\n                                minus_map[d] +\n                                '<]>'));\n                }\n    for (c = 0; 256 > c; c++)\n        for (a = map[c], e = 0; 256 > e; e++)\n            for (f = map[e], d = a[e], b = 0; 256 > b; b++)\n                d.length + f[b].length < a[b].length && (a[b] = d + f[b]);\n    --repeat\n        ? next()\n        : void 0;\n}\nfunction generate(c) {\n    for (var a = 0, f = c.length, d = '', b = 0; b < f; b++) {\n        var e = c.charCodeAt(b) & 255;\n        a = ['>' + map[0][e], map[a][e]];\n        var g = shortest_str(a);\n        d += a[g] + '.';\n        a = e;\n    }\n    return d;\n}\nnext();\n\nif (!module.required) {\n    print(generate(input));\n}\n\nmodule.exports = generate;"
}