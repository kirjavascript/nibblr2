{
    "name": "command.source",
    "command": "    const { highlight } = require('highlight.js@9.12.0');\n    const Entities = require('html-entities@1.2.1').AllHtmlEntities;\n    const entities = new Entities();\n\n    if (!input) {\n        print(`{r}Syntax:{/} {p}${IRC.trigger}command.source{/} name`)\n    }\n    else {\n        const [command, flags] = input.split(' ');\n        const cmdData = IRC.commandFns.get(command);\n        if (!cmdData) {\n            throw 'no such command';\n        }\n        const source = cmdData.command;\n        const lines = (source.match(/\\r?\\n/g) || '').length + 1;\n            const highlighted = highlight('javascript', source)\n            .value\n            .replace(/<\\/span>/g, IRC.colors('{/}'))\n            .replace(/<span class=\"(.*?)\">/g, (all, type) => {\n                return IRC.colors({\n                    'hljs-keyword': '{dp}',\n                    'hljs-string': '{dg}',\n                    'hljs-number': '{o}',\n                    'hljs-built_in': '{dc}',\n                    'hljs-subst': '{o}',\n                    'hljs-regexp': '{p}',\n                    'hljs-comment': '{dgr}',\n                    'hljs-strong': '{bo}',\n                    'hljs-code': '{y}',\n                    'hljs-params': '{dc}',\n                    'hljs-function': '{bo}',\n                    'hljs-literal': '{y}',\n                    'hljs-attr': '{dr}',\n                    'hljs-title': '{g}',\n                    'hljs-class': '{bo}',\n                }[type] || `{${type}}`);\n            });\n            print.raw(entities.decode(highlighted));\n    }",
    "locked": true,
    "starred": true
}